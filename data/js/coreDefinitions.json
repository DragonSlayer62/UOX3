{
  "globalFuncs": [
    {
      "name": "StringToNum",
      "cppName": "SE_StringToNum",
      "params": {
        "num": 1,
        "list": [
          { "name": "in", "type": "number", "required": true }
        ]
      },
      "returns": "string"
    },
    {
      "name": "NumToString",
      "cppName": "SE_NumToString",
      "params": {
        "num": 1,
        "list": [
          { "name": "in", "type": "string", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "NumToHexString",
      "cppName": "SE_NumToHexString",
      "params": {
        "num": 1,
        "list": [
          { "name": "in", "type": "number", "required": true }
        ]
      },
      "returns": "string"
    },
    {
      "name": "DoMovingEffect",
      "cppName": "SE_DoMovingEffect",
      "params": {
        "sets": [
          {
            "num": 6,
            "max": 8,
            "list": [
              { "name": "src", "type": "CharOrItem", "required": true },
              { "name": "trg", "type": "CharOrItem", "required": true },
              { "name": "effectId", "type": "number", "required": true },
              { "name": "speed", "type": "number", "required": true },
              { "name": "loop", "type": "number", "required": true },
              { "name": "explode", "type": "boolean", "required": true },
              { "name": "hue", "type": "number", "required": false },
              { "name": "renderMode", "type": "number", "required": false }
            ]
          },
          {
            "num": 8,
            "max": 10,
            "list": [
              { "name": "src", "type": "CharOrItem", "required": true },
              { "name": "trgX", "type": "number", "required": true },
              { "name": "trgY", "type": "number", "required": true },
              { "name": "trgZ", "type": "number", "required": true },
              { "name": "effectId", "type": "number", "required": true },
              { "name": "speed", "type": "number", "required": true },
              { "name": "loop", "type": "number", "required": true },
              { "name": "explode", "type": "boolean", "required": true },
              { "name": "hue", "type": "number", "required": false },
              { "name": "renderMode", "type": "number", "required": false }
            ]
          },
          {
            "num": 10,
            "max": 12,
            "list": [
              { "name": "srcX", "type": "number", "required": true },
              { "name": "srcY", "type": "number", "required": true },
              { "name": "srcZ", "type": "number", "required": true },
              { "name": "trgX", "type": "number", "required": true },
              { "name": "trgY", "type": "number", "required": true },
              { "name": "trgZ", "type": "number", "required": true },
              { "name": "effectId", "type": "number", "required": true },
              { "name": "speed", "type": "number", "required": true },
              { "name": "loop", "type": "number", "required": true },
              { "name": "explode", "type": "boolean", "required": true },
              { "name": "hue", "type": "number", "required": false },
              { "name": "renderMode", "type": "number", "required": false }
            ]
          }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DoStaticEffect",
      "cppName": "SE_DoStaticEffect",
      "params": {
        "num": 7,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "effectId", "type": "number", "required": true },
          { "name": "speed", "type": "number", "required": true },
          { "name": "loop", "type": "number", "required": true },
          { "name": "explode", "type": "boolean", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "BroadcastMessage",
      "cppName": "SE_BroadcastMessage",
      "params": {
        "num": 1,
        "list": [
          { "name": "message",  "type": "string", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RandomNumber",
      "cppName": "SE_RandomNumber",
      "params": {
        "num": 2,
        "list": [
          { "name": "low",  "type": "number", "required": true },
          { "name": "high", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "CalcCharFromSer",
      "cppName": "SE_CalcCharFromSer",
      "params": {
        "sets": [
          {
            "num": 1,
            "list": [
              { "name": "serial",  "type": "number", "required": true }
            ]
          },
          {
            "num": 4,
            "list": [
              { "name": "byte1", "type": "number", "required": true },
              { "name": "byte2", "type": "number", "required": true },
              { "name": "byte3", "type": "number", "required": true },
              { "name": "byte4", "type": "number", "required": true }
            ]
          }
        ]
      },
      "returns": "Character"
    },
    {
      "name": "CalcItemFromSer",
      "cppName": "SE_CalcItemFromSer",
      "params": {
        "sets": [
          {
            "num": 1,
            "list": [
              { "name": "serial",  "type": "number", "required": true }
            ]
          },
          {
            "num": 4,
            "list": [
              { "name": "byte1", "type": "number", "required": true },
              { "name": "byte2", "type": "number", "required": true },
              { "name": "byte3", "type": "number", "required": true },
              { "name": "byte4", "type": "number", "required": true }
            ]
          }
        ]
      },
      "returns": "Item"
    },
    {
      "name": "CalcMultiFromSer",
      "cppName": "SE_CalcMultiFromSer",
      "params": {
        "sets": [
          {
            "num": 1,
            "list": [
              { "name": "serial",  "type": "number", "required": true }
            ]
          },
          {
            "num": 4,
            "list": [
              { "name": "byte1", "type": "number", "required": true },
              { "name": "byte2", "type": "number", "required": true },
              { "name": "byte3", "type": "number", "required": true },
              { "name": "byte4", "type": "number", "required": true }
            ]
          }
        ]
      },
      "returns": "Multi"
    },
    {
      "name": "CheckTimeSinceLastCombat",
      "cppName": "SE_CheckTimeSinceLastCombat",
      "params": {
        "num": 2,
        "list": [
          { "name": "toon", "type": "Character", "required": true },
          { "name": "timespanSecs", "type": "number", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "CheckInstaLog",
      "cppName": "SE_CheckInstaLog",
      "params": {
        "num": 4,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetHour",
      "cppName": "SE_GetHour",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetMinute",
      "cppName": "SE_GetMinute",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetDay",
      "cppName": "SE_GetDay",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "SecondsPerUOMinute",
      "cppName": "SE_SecondsPerUOMinute",
      "params": {
        "num": 0,
        "max": 1,
        "list": [
          { "name": "newVal", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "GetCurrentClock",
      "cppName": "SE_GetCurrentClock",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetStartTime",
      "cppName": "SE_GetStartTime",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetMurderThreshold",
      "cppName": "SE_GetMurderThreshold",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "RollDice",
      "cppName": "SE_RollDice",
      "params": {
        "num": 3,
        "list": [
          { "name": "dice", "type": "number", "required": true },
          { "name": "face", "type": "number", "required": true },
          { "name": "add",  "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "RaceCompareByRace",
      "cppName": "SE_RaceCompareByRace",
      "params": {
        "num": 2,
        "list": [
          { "name": "raceA", "type": "number", "required": true },
          { "name": "raceB",  "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "GetRandomSOSArea",
      "cppName": "SE_GetRandomSOSArea",
      "params": {
        "num": 2,
        "list": [
          { "name": "worldNum",   "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true }
        ]
      },
      "returns": "number[]"
    },
    {
      "name": "DoTempEffect",
      "cppName": "SE_DoTempEffect",
      "params": {
        "num": 7,
        "max": 8,
        "list": [
          { "name": "iType",    "type": "number",     "required": true },
          { "name": "src",      "type": "CharOrNull", "required": true },
          { "name": "dst",      "type": "CharOrItem", "required": true },
          { "name": "targNum",  "type": "number",     "required": true },
          { "name": "more1",    "type": "number",     "required": true },
          { "name": "more2",    "type": "number",     "required": true },
          { "name": "more3",    "type": "number",     "required": true },
          { "name": "item",     "type": "Item",       "required": false }
        ]
      },
      "returns": "void"
    },
    {
      "name": "MakeItem",
      "cppName": "SE_MakeItem",
      "params": {
        "num": 3,
        "max": 4,
        "list": [
          { "name": "mSock",          "type": "Socket",     "required": true },
          { "name": "player",         "type": "Character",  "required": true },
          { "name": "itemMenu",       "type": "number",     "required": true },
          { "name": "resourceColour", "type": "number",     "required": false }
        ]
      },
      "returns": "void"
    },
    {
      "name": "FindMulti",
      "cppName": "SE_FindMulti",
      "params": {
        "sets": [
          {
            "num": 1,
            "list": [
              { "name": "src",  "type": "CharOrItem", "required": true }
            ]
          },
          {
            "num": 4,
            "max": 5,
            "list": [
              { "name": "x",          "type": "number", "required": true },
              { "name": "y",          "type": "number", "required": true },
              { "name": "z",          "type": "number", "required": true },
              { "name": "worldNum",   "type": "number", "required": true },
              { "name": "instanceId", "type": "number", "required": false }
            ]
          }
        ]
      },
      "returns": "void"
    },
    {
      "name": "GetItem",
      "cppName": "SE_GetItem",
      "params": {
        "num": 4,
        "max": 5,
            "list": [
              { "name": "x",          "type": "number", "required": true },
              { "name": "y",          "type": "number", "required": true },
              { "name": "z",          "type": "number", "required": true },
              { "name": "worldNum",   "type": "number", "required": true },
              { "name": "instanceId", "type": "number", "required": false }
            ]
      },
      "returns": "ItemOrNull"
    },
    {
      "name": "FindItem",
      "cppName": "SE_FindItem",
      "params": {
        "num": 5,
        "max": 6,
            "list": [
              { "name": "x",          "type": "number", "required": true },
              { "name": "y",          "type": "number", "required": true },
              { "name": "z",          "type": "number", "required": true },
              { "name": "worldNum",   "type": "number", "required": true },
              { "name": "id",         "type": "number", "required": true },
              { "name": "instanceId", "type": "number", "required": false }
            ]
      },
      "returns": "ItemOrNull"
    },
    {
      "name": "PossessTown",
      "cppName": "SE_PossessTown",
      "params": {
        "num": 2,
        "list": [
          { "name": "town",       "type": "number", "required": true },
          { "name": "sTown",      "type": "number", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "IsRaceWeakToWeather",
      "cppName": "SE_IsRaceWeakToWeather",
      "params": {
        "num": 2,
        "list": [
          { "name": "raceID",     "type": "number", "required": true },
          { "name": "weathType",  "type": "number", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetRaceSkillAdjustment",
      "cppName": "SE_GetRaceSkillAdjustment",
      "params": {
        "num": 2,
        "list": [
          { "name": "raceID",   "type": "number", "required": true },
          { "name": "skillID",  "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "UseItem",
      "cppName": "SE_UseItem",
      "params": {
        "num": 2,
        "list": [
          { "name": "src",  "type": "CharOrSocket", "required": true },
          { "name": "item", "type": "Item",         "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "TriggerTrap",
      "cppName": "SE_TriggerTrap",
      "params": {
        "num": 2,
        "list": [
          { "name": "src",  "type": "CharOrSocket", "required": true },
          { "name": "item", "type": "Item",         "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "CompareGuildByGuild",
      "cppName": "SE_CompareGuildByGuild",
      "params": {
        "num": 2,
        "list": [
          { "name": "guild1", "type": "number", "required": true },
          { "name": "guild2", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "CommandLevelReq",
      "cppName": "SE_CommandLevelReq",
      "params": {
        "num": 1,
        "list": [
          { "name": "command", "type": "string", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "CommandExists",
      "cppName": "SE_CommandExists",
      "params": {
        "num": 1,
        "list": [
          { "name": "command", "type": "string", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "FirstCommand",
      "cppName": "SE_FirstCommand",
      "params": {
        "num": 0
      },
      "returns": "string"
    },
    {
      "name": "NextCommand",
      "cppName": "SE_NextCommand",
      "params": {
        "num": 0
      },
      "returns": "string"
    },
    {
      "name": "FinishedCommandList",
      "cppName": "SE_FinishedCommandList",
      "params": {
        "num": 0
      },
      "returns": "boolean"
    },
    {
      "name": "CreateDFNItem",
      "cppName": "SE_CreateDFNItem",
      "params": {
        "num": 3,
        "max": 9,
        "list": [
          { "name": "sock",       "type": "SocketOrNull", "required": true },
          { "name": "toon",       "type": "CharOrNull",   "required": true },
          { "name": "sectNumber", "type": "string",       "required": true },
          { "name": "itemAmount", "type": "number",       "required": false },
          { "name": "itemType",   "type": "string",       "required": false },
          { "name": "inPack",     "type": "boolean",      "required": false },
          { "name": "color",      "type": "int",          "required": false },
          { "name": "worldNum",   "type": "int",          "required": false },
          { "name": "instanceId", "type": "int",          "required": false }
        ]
      },
      "returns": "Item"
    },
    {
      "name": "CreateBlankItem",
      "cppName": "SE_CreateBlankItem",
      "params": {
        "num": 8,
        "list": [
          { "name": "sock",       "type": "SocketOrNull", "required": true },
          { "name": "toon",       "type": "CharOrNull",   "required": true },
          { "name": "itemAmount", "type": "number",       "required": true },
          { "name": "name",       "type": "string",       "required": true },
          { "name": "itemId",     "type": "int",          "required": true },
          { "name": "color",      "type": "int",          "required": true },
          { "name": "objType",    "type": "string",       "required": true },
          { "name": "inPack",     "type": "boolean",      "required": true }
        ]
      },
      "returns": "Item"
    },
    {
      "name": "CreateHouse",
      "cppName": "SE_CreateHouse",
      "params": {
        "num": 4,
        "max": 8,
        "list": [
          { "name": "houseId",       "type": "number",  "required": true },
          { "name": "x",             "type": "number",  "required": true },
          { "name": "y",             "type": "number",  "required": true },
          { "name": "z",             "type": "number",  "required": true },
          { "name": "worldNum",      "type": "number",  "required": false },
          { "name": "instanceId",    "type": "number",  "required": false },
          { "name": "color",         "type": "number",  "required": false },
          { "name": "checkLocation", "type": "boolean", "required": false }
        ]
      },
      "returns": "Multi"
    },
    {
      "name": "CreateBaseMulti",
      "cppName": "SE_CreateBaseMulti",
      "params": {
        "num": 4,
        "max": 8,
        "list": [
          { "name": "multiId",       "type": "number",  "required": true },
          { "name": "x",             "type": "number",  "required": true },
          { "name": "y",             "type": "number",  "required": true },
          { "name": "z",             "type": "number",  "required": true },
          { "name": "worldNum",      "type": "number",  "required": false },
          { "name": "instanceId",    "type": "number",  "required": false },
          { "name": "color",         "type": "number",  "required": false },
          { "name": "checkLocation", "type": "boolean", "required": false }
        ]
      },
      "returns": "Multi"
    },
    {
      "name": "SpawnNPC",
      "cppName": "SE_SpawnNPC",
      "params": {
        "num": 5,
        "max": 7,
        "list": [
          { "name": "npcNum",        "type": "string",  "required": true },
          { "name": "x",             "type": "number",  "required": true },
          { "name": "y",             "type": "number",  "required": true },
          { "name": "z",             "type": "number",  "required": true },
          { "name": "worldNum",      "type": "number",  "required": true },
          { "name": "instanceId",    "type": "number",  "required": false },
          { "name": "useNpcList",    "type": "boolean", "required": false }
        ]
      },
      "returns": "Character"
    },
    {
      "name": "GetPackOwner",
      "cppName": "SE_GetPackOwner",
      "params": {
        "num": 2,
        "list": [
          { "name": "src",    "type": "ItemOrSerial",  "required": true },
          { "name": "type",   "type": "number",        "required": true }
        ]
      },
      "returns": "Character"
    },
    {
      "name": "FindRootContainer",
      "cppName": "SE_FindRootContainer",
      "params": {
        "num": 2,
        "list": [
          { "name": "src",    "type": "ItemOrSerial",  "required": true },
          { "name": "type",   "type": "number",        "required": true }
        ]
      },
      "returns": "Item"
    },
    {
      "name": "CalcTargetedItem",
      "cppName": "SE_CalcTargetedItem",
      "params": {
        "num": 1,
        "list": [
          { "name": "src",    "type": "Socket",  "required": true }
        ]
      },
      "returns": "ItemOrNull"
    },
    {
      "name": "CalcTargetedChar",
      "cppName": "SE_CalcTargetedChar",
      "params": {
        "num": 1,
        "list": [
          { "name": "src",    "type": "Socket",  "required": true }
        ]
      },
      "returns": "CharOrNull"
    },
    {
      "name": "GetTileIDAtMapCoord",
      "cppName": "SE_GetTileIdAtMapCoord",
      "params": {
        "num": 3,
        "list": [
          { "name": "x",             "type": "number",  "required": true },
          { "name": "y",             "type": "number",  "required": true },
          { "name": "worldNum",      "type": "number",  "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "GetDictionaryEntry",
      "cppName": "SE_GetDictionaryEntry",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "entry", "type": "number", "required": true },
          { "name": "lang", "type": "UnicodeTypes", "required": false }
        ]
      },
      "returns": "string"
    },
    {
      "name": "Yell",
      "cppName": "SE_Yell",
      "params": {
        "num": 3,
        "list": [
          { "name": "source", "type": "Socket", "required": true },
          { "name": "value", "type": "string", "required": true },
          { "name": "commandLevel", "type": "CommandLevels", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "GetRaceCount",
      "cppName": "SE_GetRaceCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "WorldBrightLevel",
      "cppName": "SE_WorldBrightLevel",
      "params": {
        "num": 0,
        "max": 1,
        "list": [
          { "name": "newLevel", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "WorldDarkLevel",
      "cppName": "SE_WorldDarkLevel",
      "params": {
        "num": 0,
        "max": 1,
        "list": [
          { "name": "newLevel", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "WorldDungeonLevel",
      "cppName": "SE_WorldDungeonLevel",
      "params": {
        "num": 0,
        "max": 1,
        "list": [
          { "name": "newLevel", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "GetSpawnRegionFacetStatus",
      "cppName": "SE_GetSpawnRegionFacetStatus",
      "params": {
        "num": 1,
        "list": [
          { "name": "spawnRegionFacet", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "SetSpawnRegionFacetStatus",
      "cppName": "SE_SetSpawnRegionFacetStatus",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "spawnRegionFacet", "type": "number", "required": true },
          { "name": "spawnRegionFacetVal", "type": "boolean", "required": false }
        ]
      },
      "returns": "void"
    },
    {
      "name": "GetMoongateFacetStatus",
      "cppName": "SE_GetMoongateFacetStatus",
      "params": {
        "num": 1,
        "list": [
          { "name": "moongateFacet", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "SetMoongateFacetStatus",
      "cppName": "SE_SetMoongateFacetStatus",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "moongateFacet", "type": "number", "required": true },
          { "name": "moongateFacetVal", "type": "boolean", "required": false }
        ]
      },
      "returns": "void"
    },
    {
      "name": "AreaCharacterFunction",
      "cppName": "SE_AreaCharacterFunction",
      "params": {
        "num": 3,
        "max": 4,
        "list": [
          { "name": "inFunction", "type": "string", "required": true },
          { "name": "source", "type": "Character", "required": true },
          { "name": "range", "type": "number", "required": true },
          { "name": "sock", "type": "Socket", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "AreaItemFunction",
      "cppName": "SE_AreaItemFunction",
      "params": {
        "num": 3,
        "max": 4,
        "list": [
          { "name": "inFunction", "type": "string", "required": true },
          { "name": "source", "type": "Item", "required": true },
          { "name": "range", "type": "number", "required": true },
          { "name": "sock", "type": "Socket", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "TriggerEvent",
      "cppName": "SE_TriggerEvent",
      "params": {
        "num": 2,
        "max": -1,
        "list": [
          { "name": "scriptId", "type": "number", "required": true },
          { "name": "eventToFire", "type": "string", "required": true },
          { "name": "...extra", "type": "any[]", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DoesEventExist",
      "cppName": "SE_DoesEventExist",
      "params": {
        "num": 2,
        "list": [
          { "name": "scriptId", "type": "number", "required": true },
          { "name": "eventToFire", "type": "string", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "Reload",
      "cppName": "SE_Reload",
      "params": {
        "num": 1,
        "list": [
          { "name": "toReload", "type": "number", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "SendStaticStats",
      "cppName": "SE_SendStaticStats",
      "params": {
        "num": 1,
        "list": [
          { "name": "target", "type": "Socket", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "GetTileHeight",
      "cppName": "SE_GetTileHeight",
      "params": {
        "num": 1,
        "list": [
          { "name": "tileID", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "IterateOver",
      "cppName": "SE_IterateOver",
      "params": {
        "num": 1,
        "list": [
          { "name": "objType", "type": "string", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "IterateOverSpawnRegions",
      "cppName": "SE_IterateOverSpawnRegions",
      "params": {
        "num": 1
      },
      "returns": "number",
      "broken": true
    },
    {
      "name": "GetSocketFromIndex",
      "cppName": "SE_GetSocketFromIndex",
      "params": {
        "num": 1,
        "list": [
          { "name": "index", "type": "number", "required": true }
        ]
      },
      "returns": "Socket"
    },
    {
      "name": "StaticAt",
      "cppName": "SE_StaticAt",
      "params": {
        "num": 3,
        "max": 4,
        "list": [
          { "name": "x",        "type": "number", "required": true },
          { "name": "y",        "type": "number", "required": true },
          { "name": "worldNum", "type": "number", "required": true },
          { "name": "tileId",   "type": "number", "required": false }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "StaticInRange",
      "cppName": "SE_StaticInRange",
      "params": {
        "num": 5,
        "list": [
          { "name": "x",        "type": "number", "required": true },
          { "name": "y",        "type": "number", "required": true },
          { "name": "worldNum", "type": "number", "required": true },
          { "name": "radius",   "type": "number", "required": true },
          { "name": "tileId",   "type": "number", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetMapElevation",
      "cppName": "SE_GetMapElevation",
      "params": {
        "num": 3,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "IsInBuilding",
      "cppName": "SE_IsInBuilding",
      "params": {
        "num": 6,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true },
          { "name": "checkHeight", "type": "boolean", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "CheckStaticFlag",
      "cppName": "SE_CheckStaticFlag",
      "params": {
        "num": 5,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "toCheck", "type": "TileFlags", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "CheckDynamicFlag",
      "cppName": "SE_CheckDynamicFlag",
      "params": {
        "num": 6,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true },
          { "name": "toCheck", "type": "TileFlags", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "CheckTileFlag",
      "cppName": "SE_CheckTileFlag",
      "params": {
        "num": 2,
        "list": [
          { "name": "tileId", "type": "number", "required": true },
          { "name": "toCheck", "type": "TileFlags", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "DoesDynamicBlock",
      "cppName": "SE_DoesDynamicBlock",
      "params": {
        "num": 9,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true },
          { "name": "checkWater", "type": "boolean", "required": true },
          { "name": "waterWalk", "type": "boolean", "required": true },
          { "name": "checkOnlyMultis", "type": "boolean", "required": true },
          { "name": "checkOnlyNonMultis", "type": "boolean", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "DoesStaticBlock",
      "cppName": "SE_DoesStaticBlock",
      "params": {
        "num": 5,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "checkWater", "type": "boolean", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "DoesMapBlock",
      "cppName": "SE_DoesMapBlock",
      "params": {
        "num": 8,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "checkWater", "type": "boolean", "required": true },
          { "name": "waterWalk", "type": "boolean", "required": true },
          { "name": "checkMultiPlacement", "type": "boolean", "required": true },
          { "name": "checkForRoad", "type": "boolean", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "DoesCharacterBlock",
      "cppName": "SE_DoesCharacterBlock",
      "params": {
        "num": 5,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "z", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instanceId", "type": "number", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "DistanceBetween",
      "cppName": "SE_DistanceBetween",
      "params": {
        "sets": [
          {
            "num": 2,
            "max": 3,
            "list": [
              { "name": "src", "type": "CharOrItem", "required": true },
              { "name": "trg", "type": "CharOrItem", "required": true },
              { "name": "checkZ", "type": "boolean", "required": false }
            ]
          },
          {
            "num": 4,
            "list": [
              { "name": "srcX", "type": "number", "required": true },
              { "name": "srcY", "type": "number", "required": true },
              { "name": "trgX", "type": "number", "required": true },
              { "name": "trgY", "type": "number", "required": true }
            ]
          },
          {
            "num": 6,
            "list": [
              { "name": "srcX", "type": "number", "required": true },
              { "name": "srcY", "type": "number", "required": true },
              { "name": "srcZ", "type": "number", "required": true },
              { "name": "trgX", "type": "number", "required": true },
              { "name": "trgY", "type": "number", "required": true },
              { "name": "trgZ", "type": "number", "required": true }
            ]
          }
        ]
      },
      "returns": "number"
    },
    {
      "name": "ResourceArea",
      "cppName": "SE_ResourceArea",
      "params": {
        "num": 1,
        "list": [
          { "name": "resType", "type": "string", "required": true }
        ]
      },
      "returns": "number",
      "broken": true
    },
    {
      "name": "ResourceAmount",
      "cppName": "SE_ResourceAmount",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "resType", "type": "string", "required": true },
          { "name": "newVal", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "ResourceTime",
      "cppName": "SE_ResourceTime",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "resType", "type": "string", "required": true },
          { "name": "newVal", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "ResourceRegion",
      "cppName": "SE_ResourceRegion",
      "params": {
        "num": 3,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true }
        ]
      },
      "returns": "UOXResource"
    },
    {
      "name": "Moon",
      "cppName": "SE_Moon",
      "params": {
        "num": 1,
        "max": 2,
        "list": [
          { "name": "slot", "type": "number", "required": true },
          { "name": "newVal", "type": "number", "required": false }
        ]
      },
      "returns": "number"
    },
    {
      "name": "GetTownRegion",
      "cppName": "SE_GetTownRegion",
      "params": {
        "num": 1,
        "list": [
          { "name": "id", "type": "number", "required": true }
        ]
      },
      "returns": "TownRegion"
    },
    {
      "name": "GetTownRegionFromXY",
      "cppName": "SE_GetTownRegionFromXY",
      "params": {
        "num": 4,
        "list": [
          { "name": "x", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instance", "type": "number", "required": true }
        ]
      },
      "returns": "TownRegion"
    },
    {
      "name": "GetSpawnRegion",
      "cppName": "SE_GetSpawnRegion",
      "params": {
        "num": 1,
        "max": 4,
        "list": [
          { "name": "xOrIndex", "type": "number", "required": true },
          { "name": "y", "type": "number", "required": true },
          { "name": "world", "type": "number", "required": true },
          { "name": "instance", "type": "number", "required": true }
        ]
      },
      "returns": "SpawnRegion"
    },
    {
      "name": "GetSpawnRegionCount",
      "cppName": "SE_GetSpawnRegionCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "RegisterCommand",
      "cppName": "SE_RegisterCommand",
      "params": {
        "num": 3,
        "list": [
          { "name": "command",   "type": "string",  "required": true },
          { "name": "execLevel", "type": "number",  "required": true },
          { "name": "isEnabled", "type": "boolean", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DisableCommand",
      "cppName": "SE_DisableCommand",
      "params": {
        "num": 1,
        "list": [
          { "name": "command",   "type": "string",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "EnableCommand",
      "cppName": "SE_EnableCommand",
      "params": {
        "num": 1,
        "list": [
          { "name": "command",   "type": "string",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RegisterKey",
      "cppName": "SE_RegisterKey",
      "params": {
        "sets": [
          {
            "num": 2,
            "list": [
              { "name": "key",        "type": "string",  "required": true },
              { "name": "toRegister", "type": "string",  "required": true }
            ]
              },
          {
            "num": 2,
            "list": [
              { "name": "key",     "type": "number",  "required": true },
              { "name": "cmdName", "type": "string",  "required": true }
            ]
          }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DisableKey",
      "cppName": "SE_DisableKey",
      "params": {
        "num": 1,
        "list": [
          { "name": "key",        "type": "number",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "EnableKey",
      "cppName": "SE_EnableKey",
      "params": {
        "num": 1,
        "list": [
          { "name": "key",        "type": "number",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RegisterConsoleFunc",
      "cppName": "SE_RegisterConsoleFunc",
      "params": {
        "num": 2,
        "list": [
          { "name": "funcToRegister", "type": "string",  "required": true },
          { "name": "cmdName",        "type": "string",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DisableConsoleFunc",
      "cppName": "SE_DisableConsoleFunc",
      "params": {
        "num": 1,
        "list": [
          { "name": "funcToDisable", "type": "string",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "EnableConsoleFunc",
      "cppName": "SE_EnableConsoleFunc",
      "params": {
        "num": 1,
        "list": [
          { "name": "funcToEnable", "type": "string",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RegisterSpell",
      "cppName": "SE_RegisterSpell",
      "params": {
        "num": 2,
        "list": [
          { "name": "spellNumber", "type": "number",  "required": true },
          { "name": "isEnabled",   "type": "boolean",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "DisableSpell",
      "cppName": "SE_DisableSpell",
      "params": {
        "num": 1,
        "list": [
          { "name": "spellNumber", "type": "number",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "EnableSpell",
      "cppName": "SE_EnableSpell",
      "params": {
        "num": 1,
        "list": [
          { "name": "spellNumber", "type": "number",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RegisterSkill",
      "cppName": "SE_RegisterSkill",
      "params": {
        "num": 2,
        "list": [
          { "name": "skillNumber", "type": "number",  "required": true },
          { "name": "isEnabled",   "type": "boolean",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "RegisterPacket",
      "cppName": "SE_RegisterPacket",
      "params": {
        "num": ,
        "list": [
          { "name": "packet", "type": "number",  "required": true },
          { "name": "subCmd", "type": "number",  "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "ReloadJSFile",
      "cppName": "SE_ReloadJSFile",
      "params": {
        "num": 1,
        "list": [
          { "name": "scriptId", "type": "number", "required": true }
        ]
      },
      "returns": "void"
    },
    {
      "name": "ValidateObject",
      "cppName": "SE_ValidateObject",
      "params": {
        "num": 1,
        "list": [
          { "name": "obj", "type": "CharOrItem", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "ApplyDamageBonuses",
      "cppName": "SE_ApplyDamageBonuses",
      "params": {
        "num": 6,
        "list": [
          { "name": "damageType", "type": "WeatherType", "required": true },
          { "name": "attacker", "type": "Character", "required": true },
          { "name": "defender", "type": "Character", "required": true },
          { "name": "fightSkill", "type": "number", "required": true },
          { "name": "hitLoc", "type": "number", "required": true },
          { "name": "baseDamage", "type": "number", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "ApplyDefenseModifiers",
      "cppName": "SE_ApplyDefenseModifiers",
      "params": {
        "num": 7,
        "list": [
          { "name": "damageType", "type": "WeatherType", "required": true },
          { "name": "attacker", "type": "Character", "required": true },
          { "name": "defender", "type": "Character", "required": true },
          { "name": "fightSkill", "type": "number", "required": true },
          { "name": "hitLoc", "type": "number", "required": true },
          { "name": "baseDamage", "type": "number", "required": true },
          { "name": "doArmorDamage", "type": "boolean", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "WillResultInCriminal",
      "cppName": "SE_WillResultInCriminal",
      "params": {
        "num": 2,
        "list": [
          { "name": "source", "type": "Character", "required": true },
          { "name": "target", "type": "Character", "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "CreateParty",
      "cppName": "SE_CreateParty",
      "params": {
        "num": 1,
        "list": [
          { "name": "source", "type": "CharOrSocket", "required": true }
        ]
      },
      "returns": "Party"
    },
    {
      "name": "GetClientFeature",
      "cppName": "SE_GetClientFeature",
      "params": {
        "num": 1,
        "list": [
          { "name": "feature", "type": "ClientFeature",  "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetServerFeature",
      "cppName": "SE_GetServerFeature",
      "params": {
        "num": 1,
        "list": [
          { "name": "feature", "type": "ServerFeature",  "required": true }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetServerSetting",
      "cppName": "SE_GetServerSetting",
      "params": {
        "num": 1,
        "list": [
          { "name": "setting", "type": "string",  "required": true }
        ]
      },
      "returns": "boolean | string | int"
    },
    {
      "name": "DeleteFile",
      "cppName": "SE_DeleteFile",
      "params": {
        "num": 1,
        "max": 3,
        "list": [
          { "name": "file", "type": "string", "required": true },
          { "name": "folder", "type": "string", "required": false },
          { "name": "scriptDataDir", "type": "boolean", "required": false }
        ]
      },
      "returns": "boolean"
    },
    {
      "name": "GetAccountCount",
      "cppName": "SE_GetAccountCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetPlayerCount",
      "cppName": "SE_GetPlayerCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetItemCount",
      "cppName": "SE_GetItemCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetMultiCount",
      "cppName": "SE_GetMultiCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetCharacterCount",
      "cppName": "SE_GetCharacterCount",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "GetServerVersionString",
      "cppName": "SE_GetServerVersionString",
      "params": {
        "num": 0
      },
      "returns": "string"
    },
    {
      "name": "EraStringToNum",
      "cppName": "SE_EraStringToNum",
      "params": {
        "num": 1,
        "list": [
          { "name": "era", "type": "string", "required": true }
        ]
      },
      "returns": "number"
    },
    {
      "name": "BASEITEMSERIAL",
      "cppName": "SE_BASEITEMSERIAL",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "INVALIDSERIAL",
      "cppName": "SE_INVALIDSERIAL",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "INVALIDID",
      "cppName": "SE_INVALIDID",
      "params": {
        "num": 0
      },
      "returns": "number"
    },
    {
      "name": "INVALIDCOLOUR",
      "cppName": "SE_INVALIDCOLOUR",
      "params": {
        "num": 0
      },
      "returns": "number"
    }
  ],
  "types": [
    {
      "name": "BaseObject"
    },
    {
      "name": "CharOrItem",
      "definition": "Character | Item"
    },
    {
      "name": "CharOrSocket",
      "definition": "Character | Socket"
    },
    {
      "name": "Character",
      "extends": "BaseObject"
    },
    {
      "name": "Item",
      "extends": "BaseObject"
    },
    {
      "name": "Socket",
      "properties": [
        {
          "name": "account",
          "cppID": "CSOCKP_ACCOUNT",
          "cppType": "JSPROP_ENUMANDPERM",
          "readOnly": true,
          "type": "Account | undefined | null"
        },
        {
          "name": "currentChar",
          "cppID": "CSOCKP_CURRENTCHAR",
          "cppType": "JSPROP_ENUMANDPERM",
          "optional": true,
          "type": "Character | undefined | null"
        },
        {
          "name": "idleTimeout",
          "cppID": "CSOCKP_IDLETIMEOUT",
          "cppType": "JSPROP_ENUMANDPERM",
          "unused": true
        },
        {
          "name": "wasIdleWarned",
          "cppID": "CSOCKP_WASIDLEWARNED",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "tempInt",
          "cppID": "CSOCKP_TEMPINT",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "tempInt2",
          "cppID": "CSOCKP_TEMPINT2",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "buffer",
          "cppID": "CSOCKP_BUFFER",
          "cppType": "JSPROP_ENUMPERMIDX",
          "unused": true
        },
        {
          "name": "xText",
          "cppID": "CSOCKP_XTEXT",
          "cppType": "JSPROP_ENUMPERMIDX",
          "type": "string"
        },
        {
          "name": "xText2",
          "cppID": "CSOCKP_XTEXT2",
          "cppType": "JSPROP_ENUMPERMIDX",
          "type": "string"
        },
        {
          "name": "clickZ",
          "cppID": "CSOCKP_CLICKZ",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "addID",
          "cppID": "CSOCKP_ADDID",
          "cppType": "JSPROP_ENUMPERMIDX",
          "unused": true
        },
        {
          "name": "newClient",
          "cppID": "CSOCKP_NEWCLIENT",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "firstPacket",
          "cppID": "CSOCKP_FIRSTPACKET",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "cryptClient",
          "cppID": "CSOCKP_CRYPTCLIENT",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "clientIP",
          "cppID": "CSOCKP_CLIENTIP",
          "cppType": "JSPROP_ENUMPERMIDX",
          "unused": true
        },
        {
          "name": "walkSequence",
          "cppID": "CSOCKP_WALKSEQUENCE",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "currentSpellType",
          "cppID": "CSOCKP_CURRENTSPELLTYPE",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "logging",
          "cppID": "CSOCKP_LOGGING",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "bytesSent",
          "cppID": "CSOCKP_BYTESSENT",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number",
          "readOnly": true
        },
        {
          "name": "bytesReceived",
          "cppID": "CSOCKP_BYTESRECEIVED",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number",
          "readOnly": true
        },
        {
          "name": "targetOK",
          "cppID": "CSOCKP_TARGETOK",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "boolean"
        },
        {
          "name": "clickX",
          "cppID": "CSOCKP_CLICKX",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clickY",
          "cppID": "CSOCKP_CLICKY",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "pickupX",
          "cppID": "CSOCKP_PICKUPX",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "pickupY",
          "cppID": "CSOCKP_PICKUPY",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "pickupZ",
          "cppID": "CSOCKP_PICKUPZ",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "pickupSpot",
          "cppID": "CSOCKP_PICKUPSPOT",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "pickupSerial",
          "cppID": "CSOCKP_PICKUPSERIAL",
          "cppType": "JSPROP_ENUMANDPERM",
          "readOnly": true,
          "type": "number"
        },
        {
          "name": "language",
          "cppID": "CSOCKP_LANGUAGE",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clientMajorVer",
          "cppID": "CSOCKP_CLIENTMAJORVER",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clientMinorVer",
          "cppID": "CSOCKP_CLIENTMINORVER",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clientSubVer",
          "cppID": "CSOCKP_CLIENTSUBVER",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clientLetterVer",
          "cppID": "CSOCKP_CLIENTLETTERVER",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "clientType",
          "cppID": "CSOCKP_CLIENTTYPE",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "number"
        },
        {
          "name": "target",
          "cppID": "CSOCKP_TARGET",
          "cppType": "JSPROP_ENUMANDPERM",
          "readOnly": true,
          "type": "BaseObject | undefined | null"
        },
        {
          "name": "tempObj",
          "cppID": "CSOCKP_TEMPOBJ",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "BaseObject | undefined | null"
        },
        {
          "name": "tempObj2",
          "cppID": "CSOCKP_TEMPOBJ2",
          "cppType": "JSPROP_ENUMANDPERM",
          "type": "BaseObject | undefined | null"
        }
      ]
    },
    {
      "name": "UOXResource"
    },
    {
      "name": "UnicodeTypes",
      "values": [
        { "label": "ZERO", "value": 0 },
        { "label": "UT_ARA" },
        { "label": "UT_ARI" },
        { "label": "UT_ARE" },
        { "label": "UT_ARL" },
        { "label": "UT_ARG" },
        { "label": "UT_ARM" },
        { "label": "UT_ART" },
        { "label": "UT_ARO" },
        { "label": "UT_ARY" },
        { "label": "UT_ARS" },
        { "label": "UT_ARJ" },
        { "label": "UT_ARB" },
        { "label": "UT_ARK" },
        { "label": "UT_ARU" },
        { "label": "UT_ARH" },
        { "label": "UT_ARQ" },
        { "label": "UT_BGR" },
        { "label": "UT_CAT" },
        { "label": "UT_CHT" },
        { "label": "UT_CHS" },
        { "label": "UT_ZHH" },
        { "label": "UT_ZHI" },
        { "label": "UT_ZHM" },
        { "label": "UT_CSY" },
        { "label": "UT_DAN" },
        { "label": "UT_DEU" },
        { "label": "UT_DES" },
        { "label": "UT_DEA" },
        { "label": "UT_DEL" },
        { "label": "UT_DEC" },
        { "label": "UT_ELL" },
        { "label": "UT_ENU" },
        { "label": "UT_ENG" },
        { "label": "UT_ENA" },
        { "label": "UT_ENC" },
        { "label": "UT_ENZ" },
        { "label": "UT_ENI" },
        { "label": "UT_ENS" },
        { "label": "UT_ENJ" },
        { "label": "UT_ENB" },
        { "label": "UT_ENL" },
        { "label": "UT_ENT" },
        { "label": "UT_ENW" },
        { "label": "UT_ENP" },
        { "label": "UT_ESP" },
        { "label": "UT_ESM" },
        { "label": "UT_ESN" },
        { "label": "UT_ESG" },
        { "label": "UT_ESC" },
        { "label": "UT_ESA" },
        { "label": "UT_ESD" },
        { "label": "UT_ESV" },
        { "label": "UT_ESO" },
        { "label": "UT_ESR" },
        { "label": "UT_ESS" },
        { "label": "UT_ESF" },
        { "label": "UT_ESL" },
        { "label": "UT_ESY" },
        { "label": "UT_ESZ" },
        { "label": "UT_ESB" },
        { "label": "UT_ESE" },
        { "label": "UT_ESH" },
        { "label": "UT_ESI" },
        { "label": "UT_ESU" },
        { "label": "UT_FIN" },
        { "label": "UT_FRA" },
        { "label": "UT_FRB" },
        { "label": "UT_FRC" },
        { "label": "UT_FRS" },
        { "label": "UT_FRL" },
        { "label": "UT_FRM" },
        { "label": "UT_HEB" },
        { "label": "UT_HUN" },
        { "label": "UT_ISL" },
        { "label": "UT_ITA" },
        { "label": "UT_ITS" },
        { "label": "UT_JPN" },
        { "label": "UT_KOR" },
        { "label": "UT_NLD" },
        { "label": "UT_NLB" },
        { "label": "UT_NOR" },
        { "label": "UT_NON" },
        { "label": "UT_PLK" },
        { "label": "UT_PTB" },
        { "label": "UT_PTG" },
        { "label": "UT_ROM" },
        { "label": "UT_RUS" },
        { "label": "UT_HRV" },
        { "label": "UT_SRL" },
        { "label": "UT_SRB" },
        { "label": "UT_SKY" },
        { "label": "UT_SQI" },
        { "label": "UT_SVE" },
        { "label": "UT_SVF" },
        { "label": "UT_THA" },
        { "label": "UT_TRK" },
        { "label": "UT_URP" },
        { "label": "UT_IND" },
        { "label": "UT_UKR" },
        { "label": "UT_BEL" },
        { "label": "UT_SLV" },
        { "label": "UT_ETI" },
        { "label": "UT_LVI" },
        { "label": "UT_LTH" },
        { "label": "UT_LTC" },
        { "label": "UT_FAR" },
        { "label": "UT_VIT" },
        { "label": "UT_HYE" },
        { "label": "UT_AZE" },
        { "label": "UT_EUQ" },
        { "label": "UT_MKI" },
        { "label": "UT_AFK" },
        { "label": "UT_KAT" },
        { "label": "UT_FOS" },
        { "label": "UT_HIN" },
        { "label": "UT_MSL" },
        { "label": "UT_MSB" },
        { "label": "UT_KAZ" },
        { "label": "UT_SWK" },
        { "label": "UT_UZB" },
        { "label": "UT_TAT" },
        { "label": "UT_BEN" },
        { "label": "UT_PAN" },
        { "label": "UT_GUJ" },
        { "label": "UT_ORI" },
        { "label": "UT_TAM" },
        { "label": "UT_TEL" },
        { "label": "UT_KAN" },
        { "label": "UT_MAL" },
        { "label": "UT_ASM" },
        { "label": "UT_MAR" },
        { "label": "UT_SAN" },
        { "label": "UT_KOK" },
        { "label": "TOTAL_LANGUAGES" }
      ]

    },
    {
      "name": "CommandLevels",
      "values": [
        { "label": "CL_PLAYER", "value": 0 },
        { "label": "CL_CNS" },
        { "label": "CL_GM" },
        { "label": "CL_ADMIN" }
      ]
    },
    {
      "name": "WeatherType",
      "values": [
        { "label": "NONE", "value": 0 },
        { "label": "PHYSICAL" },
        { "label": "LIGHT" },
        { "label": "RAIN" },
        { "label": "COLD" },
        { "label": "HEAT" },
        { "label": "LIGHTNING" },
        { "label": "POISON" },
        { "label": "SNOW" },
        { "label": "STORM" },
        { "label": "STORMBREW" },
        { "label": "WEATHNUM" }
      ]
    },
    {
      "name": "Party"
    },
    {
      "name": "TownRegion",
      "aka": "UOXRegion"
    },
    {
      "name": "SpawnRegion",
      "aka": "UOXSpawnRegion"
    },
    {
      "name": "TileFlags",
      "values": [
        { "label": "TF_FLOORLEVEL",    "value": 0, "comment": "Background" },
        { "label": "TF_HOLDABLE",                  "comment": "Weapon" },
        { "label": "TF_TRANSPARENT",               "comment": "SignGuildBanner" },
        { "label": "TF_TRANSLUCENT",               "comment": "WebDirtBlood" },
        { "label": "TF_WALL",                      "comment": "WallVertTile" },
        { "label": "TF_DAMAGING" },
        { "label": "TF_BLOCKING",                  "comment": "Impassable" },
        { "label": "TF_WET",                       "comment": "LiquidWet" },
        { "label": "TF_UNKNOWN1",                  "comment": "Ignored" },
        { "label": "TF_SURFACE",                   "comment": "Standable" },
        { "label": "TF_CLIMBABLE",                 "comment": "Bridge" },
        { "label": "TF_STACKABLE",                 "comment": "Generic" },
        { "label": "TF_WINDOW",                    "comment": "WindowArchDoor" },
        { "label": "TF_NOSHOOT",                   "comment": "CannotShootThru" },
        { "label": "TF_DISPLAYA",                  "comment": "Prefix A" },
        { "label": "TF_DISPLAYAN",                 "comment": "Prefix An" },
        { "label": "TF_DESCRIPTION",               "comment": "Internal" },
        { "label": "TF_FOLIAGE",                   "comment": "FadeWithTrans" },
        { "label": "TF_PARTIALHUE" },
        { "label": "TF_UNKNOWN2" },
        { "label": "TF_MAP" },
        { "label": "TF_CONTAINER" },
        { "label": "TF_WEARABLE",                  "comment": "Equipable" },
        { "label": "TF_LIGHT",                     "comment": "LightSource" },
        { "label": "TF_ANIMATED" },
        { "label": "TF_NODIAGONAL",                "comment": "'HoverOver' in SA clients and later, to determine if tiles can be moved on by flying gargoyles" },
        { "label": "TF_UNKNOWN3",                  "comment": "'NoDiagonal' in SA clients and later?" },
        { "label": "TF_ARMOR",                     "comment": "WholeBodyItem" },
        { "label": "TF_ROOF",                      "comment": "WallRoofWeap" },
        { "label": "TF_DOOR" },
        { "label": "TF_STAIRBACK",                 "comment": "ClimbableBit1" },
        { "label": "TF_STAIRRIGHT",                "comment": "ClimbableBit2" },
        { "label": "TF_ALPHABLEND",                "comment": "Blend Alphas, tile blending" },
        { "label": "TF_USENEWART",                 "comment": "Uses new art style?" },
        { "label": "TF_ARTUSED",                   "comment": "Is art being used?" },
        { "label": "TF_BIT36",                     "comment": "Unknown/Unused" },
        { "label": "TF_NOSHADOW",                  "comment": "Disallow shadow on this tile, lightsource? lava?" },
        { "label": "TF_PIXELBLEED",                "comment": "Let pixels bleed in to other tiles? Is this Disabling Texture Clamp?" },
        { "label": "TF_PLAYANIMONCE",              "comment": "Play tile animation once." },
        { "label": "TF_BIT40",                     "comment": "Unknown/Unused" },
        { "label": "TF_MULTIMOVABLE",              "comment": "Movable multi? Cool ships and vehicles etc?" },
        { "label": "TF_COUNT" }
      ]
    },
    {
      "name": "Multi",
      "extends": "Item"
    },
    {
      "name": "CharOrNull",
      "definition": "Character | null | undefined"
    },
    {
      "name": "ItemOrNull",
      "definition": "Item | null | undefined"
    },
    {
      "name": "ItemOrSerial",
      "definition": "Item | number"
    },
    {
      "name": "ClientFeature",
      "values": [
        { "label": "CF_BIT_CHAT",      "value": 0,  "comment": "0x01" },
        { "label": "CF_BIT_UOR",                    "comment": "0x02" },
        { "label": "CF_BIT_TD",                     "comment": "0x04" },
        { "label": "CF_BIT_LBR",                    "comment": "0x08 - Enables LBR features: mp3s instead of midi, show new LBR monsters" },
        { "label": "CF_BIT_AOS",                    "comment": "0x10 - Enable AoS monsters/map, AoS skills, Necro/Pala/Fight book stuff - works for 4.0+" },
        { "label": "CF_BIT_SIXCHARS",               "comment": "0x20 - Enable sixth character slot" },
        { "label": "CF_BIT_SE",                     "comment": "0x40" },
        { "label": "CF_BIT_ML",                     "comment": "0x80 - Elven race, new spells, skills + housing tiles" },
        { "label": "CF_BIT_EIGHTAGE",               "comment": "0x100 - Splash screen for 8th age" },
        { "label": "CF_BIT_NINTHAGE",               "comment": "0x200 - Splash screen for 9th age" },
        { "label": "CF_BIT_TENTHAGE",               "comment": "0x400 - Splash screen for 10th age - crystal/shadow house tiles" },
        { "label": "CF_BIT_UNKNOWN1",               "comment": "0x800 - Increased housing/bank storage (6.0.3.0 or earlier)" },
        { "label": "CF_BIT_SEVENCHARS",             "comment": "0x1000 - Enable seventh character slot" },
        { "label": "CF_BIT_KRFACES",                "comment": "0x2000 - KR release (6.0.0.0)", "disabled": true },
        { "label": "CF_BIT_TRIAL",                  "comment": "0x4000 - Trial account", "disabled": true },
        { "label": "CF_BIT_EXPANSION", "value": 15, "comment": "0x8000 - Live account" },
        { "label": "CF_BIT_SA",                     "comment": "0x10000 - Enable SA features: gargoyle race, spells, skills, housing tiles - clients 6.0.14.2+" },
        { "label": "CF_BIT_HS",                     "comment": "0x20000 - Enable HS features: boats, new movementtype? ++" },
        { "label": "CF_BIT_GOTHHOUSE",              "comment": "0x40000" },
        { "label": "CF_BIT_RUSTHOUSE",              "comment": "0x80000" },
        { "label": "CF_BIT_JUNGLEHOUSE",            "comment": "0x100000 - Enable Jungle housing tiles" },
        { "label": "CF_BIT_SHADOWHOUSE",            "comment": "0x200000 - Enable Shadowguard housing tiles" },
        { "label": "CF_BIT_TOLHOUSE",               "comment": "0x400000 - Enable Time of Legends features" },
        { "label": "CF_BIT_ENDLESSHOUSE",           "comment": "0x800000 - Enable Endless Journey account" },
        { "label": "CF_BIT_COUNT" }
      ]
    },
    {
      "name": "ServerFeature",
      "values": [
        { "label": "SF_BIT_UNKNOWN1",     "value": 0,  "comment": "0x01" },
        { "label": "SF_BIT_IGR",                       "comment": "0x02" },
        { "label": "SF_BIT_ONECHAR",                   "comment": "0x04 - One char only, Siege-server style" },
        { "label": "SF_BIT_CONTEXTMENUS",              "comment": "0x08" },
        { "label": "SF_BIT_LIMITCHAR",                 "comment": "0x10 - Limit amount of chars, combine with OneChar" },
        { "label": "SF_BIT_AOS",                       "comment": "0x20 - Enable Tooltips, fight system book - but not monsters/map/skills/necro/pala classes" },
        { "label": "SF_BIT_SIXCHARS",                  "comment": "0x40 - Use 6 character slots instead of 5 (4.0.3a)" },
        { "label": "SF_BIT_SE",                        "comment": "0x80 - Samurai and Ninja classes, bushido, ninjitsu (4.0.5a)" },
        { "label": "SF_BIT_ML",                        "comment": "0x100 - Elven race, spellweaving (4.0.11d)" },
        { "label": "SF_BIT_UNKNOWN2",                  "comment": "0x200 - added with UO:KR launch (6.0.0.0)" },
        { "label": "SF_BIT_SEND3DTYPE",                "comment": "0x400 - Send UO3D client type? KR and SA clients will send 0xE1)" },
        { "label": "SF_BIT_UNKNOWN4",                  "comment": "0x800 - added sometime between UO:KR and UO:SA" },
        { "label": "SF_BIT_SEVENCHARS",                "comment": "0x1000 - Use 7 character slots instead of 5?6?, only 2D client?" },
        { "label": "SF_BIT_UNKNOWN5",                  "comment": "0x2000 - added with UO:SA launch, imbuing, mysticism, throwing? (7.0.0.0)" },
        { "label": "SF_BIT_NEWMOVE",                   "comment": "0x4000 - new movement system (packets 0xF0, 0xF1, 0xF2))" },
        { "label": "SF_BIT_FACTIONAREAS", "value": 15, "comment": "0x8000 - Unlock new Felucca faction-areas (map0x.mul?)" },
        { "label": "SF_BIT_COUNT",                     "comment": "" }
      ]
    },
    {
      "name": "Account"
    }
  ]
}